#!/bin/bash

# Email Intelligence Collector - Docker Launcher
set -e

echo "üöÄ Email Intelligence Collector - Docker Setup"
echo "=============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—É—Ç—å –∫ Docker Desktop
DOCKER_PATH="/Applications/Docker.app/Contents/Resources/bin/docker"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker Desktop
if [ ! -f "$DOCKER_PATH" ]; then
    print_error "Docker Desktop –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker Desktop —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω
if ! $DOCKER_PATH info &> /dev/null; then
    print_error "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

print_status "Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–ø—É—â–µ–Ω—ã
print_status "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
$DOCKER_PATH compose -f docker-compose.simple.yml down --remove-orphans 2>/dev/null || true

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f .env ]; then
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    cp .env.docker .env
    print_warning "–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–µ–π."
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–∑–∞ –∏ —Å–æ–±–∏—Ä–∞–µ–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
print_status "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
$DOCKER_PATH compose -f docker-compose.simple.yml build

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
print_status "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ Email Intelligence Collector..."
$DOCKER_PATH compose -f docker-compose.simple.yml up -d

# –ñ–¥–µ–º –ø–æ–∫–∞ —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
print_status "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
if $DOCKER_PATH compose -f docker-compose.simple.yml ps | grep -q "Up"; then
    print_success "‚úÖ Email Intelligence Collector —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
    echo ""
    echo "üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    echo "   üåê API: http://localhost:8001"
    echo "   üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8001/docs"
    echo "   ‚ù§Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è: http://localhost:8001/health"
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º API..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    if curl -s -f http://localhost:8001/health > /dev/null; then
        print_success "API –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        echo ""
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:"
        curl -s http://localhost:8001/api/stats | python3 -m json.tool 2>/dev/null || echo "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        
    else
        print_warning "API –ø–æ–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –í–æ–∑–º–æ–∂–Ω–æ —Å–µ—Ä–≤–∏—Å –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è."
        print_status "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥: curl http://localhost:8001/health"
    fi
    
    echo ""
    echo "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: $DOCKER_PATH compose -f docker-compose.simple.yml logs -f"
    echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: $DOCKER_PATH compose -f docker-compose.simple.yml down"
    echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: $DOCKER_PATH compose -f docker-compose.simple.yml restart"
    echo "   –°—Ç–∞—Ç—É—Å: $DOCKER_PATH compose -f docker-compose.simple.yml ps"
    
else
    print_error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏..."
    $DOCKER_PATH compose -f docker-compose.simple.yml logs --tail=20
    exit 1
fi

echo ""
print_success "üéâ –ó–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é."
